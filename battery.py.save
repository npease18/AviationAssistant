#!/usr/bin/env python
import struct
import smbus
import sys
import time
import json
import sched
s = sched.scheduler(time.time, time.sleep)

bus = smbus.SMBus(1) # 0 = /dev/i2c-0 (port I2C0), 1 = /dev/i2c-1 (port I2C1)
data = {}
s = sched.scheduler(time.time, time.sleep)

def readVoltage(bus):

     address = 0x36
     read = bus.read_word_data(address, 2)
     swapped = struct.unpack("<H", struct.pack(">H", read))[0]
     voltage = swapped * 1.25 /1000/16
     return voltage


def readCapacity(bus):

     address = 0x36
     read = bus.read_word_data(address, 4)
     swapped = struct.unpack("<H", struct.pack(">H", read))[0]
     capacity = swapped/256
     return capacity

def writeJSON():
    capacity = readCapacity(bus)
    voltage = readCapacity(bus)
    if GPIO.input(6):
        # Power Adapter NOT plugged in
    	adapter = "out"
    else:
        # Power Adapter plugged in
    	adapter = "in"
    data['percentage'] = []
    data['percentage'].append({
        'level': capacity,
        'voltage': voltage
    })
    data['adapter'] = []
    data['adapter'].append({
	'status': adapter
    })
    with open('battery.json', 'w') as outfile:
        json.dump(data, outfile)

s.enterabs(60, 1, writeJSON, ())
s.run()
